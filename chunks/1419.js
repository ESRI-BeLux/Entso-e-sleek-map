"use strict";(self.webpackChunkentso_e_sleek_map_tester=self.webpackChunkentso_e_sleek_map_tester||[]).push([[1419],{81419:(e,t,r)=>{r.r(t),r.d(t,{default:()=>h}),r(22955);var s=r(32655),o=r(60035),i=r(98297),l=r(51638),n=r(72128),a=r(14983),c=r(98457),m=r(73050),f=r(31785),u=r(79379),p=r(18176),S=r(79238),d=r(46803);class h{convertVectorFieldData(e){const t=o.A.fromJSON(e.pixelBlock),r=(0,m.FI)(t,e.type);return Promise.resolve(null!=r?r.toJSON():null)}computeStatisticsHistograms(e){const t=o.A.fromJSON(e.pixelBlock),r=(0,c.eH)(t);return Promise.resolve(r)}async decode(e){const t=await(0,i.D)(e.data,e.options);return t&&t.toJSON()}symbolize(e){e.pixelBlock=o.A.fromJSON(e.pixelBlock),e.extent=e.extent?S.A.fromJSON(e.extent):null;const t=this.symbolizer.symbolize(e);return Promise.resolve(null!=t?t.toJSON():null)}async updateSymbolizer(e){this.symbolizer=u.A.fromJSON(e.symbolizerJSON),e.histograms&&"rasterStretch"===this.symbolizer?.rendererJSON.type&&(this.symbolizer.rendererJSON.histograms=e.histograms)}async updateRasterFunction(e){this.rasterFunction=(0,n.vt)(e.rasterFunctionJSON)}async process(e){const t=this.rasterFunction.process({extent:S.A.fromJSON(e.extent),primaryPixelBlocks:e.primaryPixelBlocks.map((e=>null!=e?o.A.fromJSON(e):null)),primaryPixelSizes:e.primaryPixelSizes?.map((e=>null!=e?d.A.fromJSON(e):null)),primaryRasterIds:e.primaryRasterIds});return null!=t?t.toJSON():null}stretch(e){const t=this.symbolizer.simpleStretch(o.A.fromJSON(e.srcPixelBlock),e.stretchParams);return Promise.resolve(t?.toJSON())}estimateStatisticsHistograms(e){const t=(0,c.f4)(o.A.fromJSON(e.srcPixelBlock));return Promise.resolve(t)}split(e){const t=(0,l.lD)(o.A.fromJSON(e.srcPixelBlock),e.tileSize,e.maximumPyramidLevel??0,!1===e.useBilinear);return t&&t.forEach(((e,r)=>{t.set(r,e?.toJSON())})),Promise.resolve(t)}clipTile(e){const t=o.A.fromJSON(e.pixelBlock),r=(0,l.J$)({...e,pixelBlock:t});return Promise.resolve(r?.toJSON())}async mosaicAndTransform(e){const t=e.srcPixelBlocks.map((e=>e?new o.A(e):null)),r=(0,l.z7)(t,e.srcMosaicSize,{blockWidths:e.blockWidths,alignmentInfo:e.alignmentInfo,clipOffset:e.clipOffset,clipSize:e.clipSize});let s,i=r;return e.coefs&&(i=(0,l.$i)(r,e.destDimension,e.coefs,e.sampleSpacing,e.interpolation)),e.projectDirections&&e.gcsGrid&&(s=(0,l.QF)(e.destDimension,e.gcsGrid),i=(0,m.Y2)(i,e.isUV?"vector-uv":"vector-magdir",s)),{pixelBlock:i?.toJSON(),localNorthDirections:s}}async createFlowMesh(e,t){const r={data:new Float32Array(e.flowData.buffer),mask:new Uint8Array(e.flowData.maskBuffer),width:e.flowData.width,height:e.flowData.height},{vertexData:s,indexData:o}=await(0,p.CW)(e.meshType,e.simulationSettings,r,t.signal);return{result:{vertexBuffer:s.buffer,indexBuffer:o.buffer},transferList:[s.buffer,o.buffer]}}async getProjectionOffsetGrid(e){const t=S.A.fromJSON(e.projectedExtent),r=S.A.fromJSON(e.srcBufferExtent);let o=null;e.datumTransformationSteps&&(o=new s.A({steps:e.datumTransformationSteps})),(e.includeGCSGrid||(0,a.xh)(t.spatialReference,r.spatialReference,o))&&await(0,a.Hh)();const i=e.rasterTransform?(0,f.l)(e.rasterTransform):null;return(0,a.l0)({...e,projectedExtent:t,srcBufferExtent:r,datumTransformation:o,rasterTransform:i})}}}}]);